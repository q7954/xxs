var rule = {
  title: '集百动画',
  host: 'http://www.jibai5.com/',
  url: '/bm/fyclass/fypage.html',
  searchUrl: '/vodsearch/**----------fypage---.html',
  searchable: 2,
  headers: {
    'User-Agent': 'MOBILE_UA',
  },
  timeout: 9000,
  class_name: '沙雕剧场&3D国漫&动沙漫',
  class_url: '22&20&21',
  play_parse: true,
  sniffer: 0,
//  isVideo: 'https://api.mrgaocloud.com/cache/data',
  lazy:$js.toString(() => {
  let html = request(input);
  let hconf = html.match(/r player_.*?=(.*?)</)[1];
  let json = JSON.parse(hconf);
  let url = json.url;
  if (/\.(m3u8|mp4|m4a|mp3)/.test(url)) {
    input = {
      parse: 0,
      jx: 0,
      url: url,
    };
  } else {
    input = {
      parse: 1,
      jx: 0,
      header:rule.headers,
      url: 'https://jx.xmflv.cc/?url=' + url,
    };
  }}),
  double: true,
  推荐: '.boxlist;.listfl;.list-name&&Text;.lazy&&src;.duration&&Text;a&&href;.list-content&&Text',
  一级: '.listfl;.list-name&&Text;.lazy&&src;.duration&&Text;a&&href;.list-content&&Text',
  二级: {
    title: '.detail-title h2&&Text;.info dd:eq(6)&&Text',
    img: '.lazy&&src',
    desc: '.info dd:eq(1)&&Text;.info dd:eq(3)&&Text;.info dd:eq(5)&&Text;.info dd:eq(0)&&Text;.info dd:eq(2)&&Text',
    content: '.panel-jvqing p&&Text',
    tabs: '.panel-heading',
    lists: '.dslist-group:eq(#id)&&a',
  },
  搜索: '.listfl;.list-name&&Text;.lazy&&src;.duration&&Text;a&&href;.list-content&&Text',
}